{
	"info": {
		"_postman_id": "e572e56e-53bd-4828-b0a6-ec002dcffe04",
		"name": "StockAnalysisAPI",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get all stocks",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Includes all stocks\",function(){\r",
							"\r",
							"    pm.expect(jsonData[0].name).to.eql(\"Adidas\");\r",
							"    pm.expect(jsonData[1].name).to.eql(\"Airbus\");\r",
							"    pm.expect(jsonData[2].name).to.eql(\"Allianz\");\r",
							"    pm.expect(jsonData.length).to.equal(70);\r",
							"\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}api/stocks",
					"host": [
						"{{base_url}}api"
					],
					"path": [
						"stocks"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get stocks with filter",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Includes all stocks of DAX\",function(){\r",
							"\r",
							"    pm.expect(jsonData[0].name).to.eql(\"Adidas\");\r",
							"    pm.expect(jsonData[10].name).to.eql(\"Daimler\");\r",
							"    pm.expect(jsonData[15].name).to.eql(\"Deutsche Telekom\");\r",
							"    pm.expect(jsonData[37].name).to.eql(\"Volkswagen\")\r",
							"    pm.expect(jsonData.length).to.equal(40);\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}api/stocks?index=1",
					"host": [
						"{{base_url}}api"
					],
					"path": [
						"stocks"
					],
					"query": [
						{
							"key": "index",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get stocks with filter 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Includes all stocks of DAX from germany\",function(){\r",
							"\r",
							"    pm.expect(jsonData[0].name).to.eql(\"Adidas\");\r",
							"    pm.expect(jsonData[3].name).to.eql(\"BASF\");\r",
							"    pm.expect(jsonData[5].name).to.eql(\"Beiersdorf AG\");\r",
							"    pm.expect(jsonData[24].name).to.eql(\"Merck\")\r",
							"    pm.expect(jsonData.length).to.equal(40);\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}api/stocks?index=1&country=de",
					"host": [
						"{{base_url}}api"
					],
					"path": [
						"stocks"
					],
					"query": [
						{
							"key": "index",
							"value": "1"
						},
						{
							"key": "country",
							"value": "de"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get stocks with filter 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Includes all stocks of from the US which are of the sector 'Investmentbanking'\",function(){\r",
							"\r",
							"    pm.expect(jsonData[0].name).to.eql(\"Goldman Sachs\");\r",
							"    pm.expect(jsonData.length).to.equal(1);\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}api/stocks?country=us&sector=23",
					"host": [
						"{{base_url}}api"
					],
					"path": [
						"stocks"
					],
					"query": [
						{
							"key": "country",
							"value": "us"
						},
						{
							"key": "sector",
							"value": "23"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get filters",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Is valid\",function(){\r",
							"\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response must be valid and have a body\", function () {\r",
							"     pm.response.to.be.ok;\r",
							"     pm.response.to.be.withBody;\r",
							"     pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"const jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Includes all needed categories\",function(){\r",
							"\r",
							"    pm.expect(jsonData[0].name).to.eql(\"sector\");\r",
							"    pm.expect(jsonData[1].name).to.eql(\"index\");\r",
							"    pm.expect(jsonData[2].name).to.eql(\"country\");\r",
							"    pm.expect(jsonData.length).to.equal(3);\r",
							"\r",
							"});\r",
							"\r",
							"pm.test(\"Includes minimal number of operations\",function(){\r",
							"    pm.expect(jsonData[0].options).to.not.empty;\r",
							"    pm.expect(jsonData[1].options).to.not.empty;\r",
							"    pm.expect(jsonData[2].options).to.not.empty;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}api/filters/",
					"host": [
						"{{base_url}}api"
					],
					"path": [
						"filters",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get specific stock",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const body = pm.response.json();\r",
							"var count = Object.keys(body).length;\r",
							"\r",
							"pm.test(\"Check structure\",function(){\r",
							"\r",
							"    pm.expect(body.name).to.eql(\"Airbus\");\r",
							"    pm.expect(body.country).to.eql(\"DE\");\r",
							"    pm.expect(body.sectors[0].name).to.eql(\"Luft- und Raumfahrt\");\r",
							"    pm.expect(count).to.equal(24);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}api/stocks/2?period=1mo&interval=1d",
					"host": [
						"{{base_url}}api"
					],
					"path": [
						"stocks",
						"2"
					],
					"query": [
						{
							"key": "period",
							"value": "1mo"
						},
						{
							"key": "interval",
							"value": "1d"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get specific stock 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const body = pm.response.json();\r",
							"var count = Object.keys(body).length;\r",
							"\r",
							"pm.test(\"Check structure\",function(){\r",
							"\r",
							"    pm.expect(body.name).to.eql(\"Boeing\");\r",
							"    pm.expect(body.country).to.eql(\"US\");\r",
							"    pm.expect(body.sectors[0].name).to.eql(\"Luft- und Raumfahrt\");\r",
							"    pm.expect(count).to.equal(23);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}api/stocks/45?period=1d&interval=60m",
					"host": [
						"{{base_url}}api"
					],
					"path": [
						"stocks",
						"45"
					],
					"query": [
						{
							"key": "period",
							"value": "1d"
						},
						{
							"key": "interval",
							"value": "60m"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://127.0.0.1:5000/"
		}
	]
}